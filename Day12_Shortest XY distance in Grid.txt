#User function Template for python3

class Solution:
    def shortestXYDist(self, grid, n, m):
        q=[]
        vis=[[0 for i in range(m)]for j in range(n)]
        for i in range(n):
            for j in range(m):
                if grid[i][j]=='X':
                    q.append(([i,j],0))
                    vis[i][j]=1
             
        ans=int(1e8)
        dr=[-1,1,0,0]
        dc=[0,0,-1,1]
        
        while q:
            x,dist=q.pop(0)
            r,c=x[0],x[1]
            if grid[r][c]=='Y':
                return dist
            
            for i in range(4):
                nr=r+dr[i]
                nc=c+dc[i]
                
                if nr>=0 and nr<n and nc>=0 and nc<m and vis[nr][nc]==0:
                    q.append(([nr,nc],dist+1))
                    vis[nr][nc]=1
        return -1
            